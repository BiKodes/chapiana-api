[tox]
skipsdist = True
envlist = 
    python3
    coverage
    flake8
    black
    packaging
    isort
    readme

skip_missing_interpreters = true
isolated_build = true

[testenv] 
basepython = python3
usedevelop = true
setenv =
    VIRTUAL_ENV={envdir}
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = all

passenv = 
    *

whitelist_externals = python3
install_command = pip install {opts} {packages}

deps =
    setuptools
    -r{toxinidir}/requirements.txt

commands = 
    python3 -m pip install --upgrade pip
    python3 -m unittest discover -s ./tests 

[testenv:coverage]
parallel_show_output = true
depends = py3{6,7,8,9}
passenv = 
    *
setenv = 
    COVERAGE_FILE = {toxinidir}/.coverage
    COVERAGE_PROCESS_START = {toxinidir}/setup.cfg
whitelist_externals = coverage

commands =
    coverage erase
    coverage run manage.py test tests -v 2
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    coverage report --fail-under 100 --include tests/*

[flake8]
usedevelop = False
skip_install = True
ignore = D203, W503, E203, N818, D202, W503, F401, E501
exclude = 
    .tox,
    .git, 
    .venv, 
    .cache,
    __pycache__,
    dist,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
    .migrations
    
deps = 
    flake8

[testenv:flake8]
basepython=python3
deps =
    -r {toxinidir}/requirements.txt

changedir = {toxinidir}

commands =
    flake8 {posargs} 

max-line-length = 90

[testenv:black]
basepython = python3
usedevelop = False
skip_install = True
deps = black
changedir = {toxinidir}
commands = 
    black {toxinidir}

[testenv:packaging]
description =
    Do packaging/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
whitelist_externals = 
    *
deps =
    build >= 0.7.0
    pip >= 20.2.2
    toml >= 0.10.1
    twine >= 3.2.0  

changedir = {toxinidir}/dist

commands =
    python3 -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    # metadata validation
    sh -c "python3 -m twine check {toxinidir}/dist/*"


[testenv:readme]
description = check that the long description is valid
basepython = 
    python3
skip_install = true
deps =
    twine>=3.7.1

commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[testenv:isort]
basepython = python3
usedevelop = False
deps = isort
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
changedir = {toxinidir}
commands = isort {toxinidir}